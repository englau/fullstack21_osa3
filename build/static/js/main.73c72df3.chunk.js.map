{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","App.js","index.js"],"names":["Filter","props","value","filter","onChange","handleFilter","PersonForm","onSubmit","addHlo","newName","handleNameChange","newNumber","handleNumberChange","type","Hlo","person","handleDelete","name","number","onClick","id","Persons","persons","filteredPersons","map","baseUrl","exportedObject","getAll","axios","get","then","response","data","create","uusiHlo","post","deletePerson","delete","update","put","Notification","message","color","className","App","useState","setPersons","setNewName","setNewNumber","setFilter","setFilteredPersons","errorMessage","setErrorMessage","setColor","useEffect","console","log","personService","initialPersons","event","target","toLowerCase","indexOf","personform","preventDefault","personList","n","includes","returnedPerson","concat","setTimeout","window","confirm","find","p","updatedPerson","catch","error","delPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.73c72df3.chunk.js","sourcesContent":["import React from 'react'\n\n\nconst Filter = (props) => {\n    return (\n      <div>\n            filter shown with: <input value={props.filter}\n            onChange={props.handleFilter} />\n            </div>\n    )\n  \n  }\n\n  export default Filter","import React from 'react'\n\nconst PersonForm = (props) => {\n    return(\n  \n      <form onSubmit={props.addHlo}>\n          <div>\n            name: <input value ={props.newName}\n            onChange={props.handleNameChange} />\n            </div>\n            <div>\n              number: <input value ={props.newNumber}\n              onChange={props.handleNumberChange}/>\n            </div>\n            <button type=\"submit\">add</button>\n        </form>\n  \n    )\n  \n  }\n\n  export default PersonForm","import React from 'react'\n\n\n\nconst Hlo = ({person, handleDelete}) => {\n    return (\n      <li>\n        {person.name} {person.number} \n        <button onClick={()=> handleDelete(person.id)}>\n          Delete\n        </button>\n      </li>\n    )\n  }\n\n\nconst Persons = ({filter, persons, filteredPersons, handleDelete}) => {\n    if (filter === '') {\n      return (\n        <div>\n          {persons.map(person => <Hlo key ={person.name} person={person} handleDelete={ handleDelete}/>)}\n        </div>\n      )\n    }\n    return (\n      <div>\n      {filteredPersons.map(person => <Hlo key={person.name} person={person} handleDelete={ handleDelete}/>)}\n      </div>\n  \n    )\n  }\n\n  export default Persons","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = uusiHlo => {\n    const request = axios.post(baseUrl, uusiHlo)\n    return request.then(response => response.data)\n}\n\n\nconst deletePerson = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst update = (id, uusiHlo) => {\n    const request = axios.put(`${baseUrl}/${id}`, uusiHlo)\n    return request.then(response => response.data)\n  }\n\nconst exportedObject = {\n    getAll, create, deletePerson, update\n}\n\n\nexport default exportedObject","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/persons'\n\nconst Notification = ({ message, color }) => {\n  if (message === null) {\n    return null\n  }\n\n  if (color === true) {\n    return (\n      <div className=\"errorGreen\">\n      {message}\n    </div>\n    )\n  } else {\n\n  return (\n    <div className=\"errorRed\">\n      {message}\n    </div>\n  )\n}\n}\n\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [filteredPersons, setFilteredPersons] = useState(persons)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [color, setColor] = useState(true)\n\n  const hook = () => {\n    console.log('effect')\n    personService\n    .getAll()\n    .then(initialPersons => {\n      setPersons(initialPersons)\n    })\n     \n  }\n  \n  useEffect(hook, [])\n  \n\n  const addHlo = (event) => {\n    event.preventDefault()\n    const personList = persons.map(n => n.name.toLowerCase())\n    const uusiHlo = {\n      name: newName,\n      number: newNumber\n    }\n\n    if (personList.includes(newName.toLowerCase()) === false) {\n      personService\n      .create(uusiHlo)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNewName('')\n        setNewNumber('')\n        setFilter('')\n        setFilteredPersons(persons)\n        })\n        setColor(true)\n        setErrorMessage(\n          `Added ${newName}`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      } else {\n        const confirmUpdate = window.confirm(`${newName} is already added to phonebook, replace the old number to new one? `)\n\n\n        if (confirmUpdate) {\n          const person = persons.find((p) => p.name.toLowerCase()=== newName.toLowerCase())\n          const updatedPerson = { ...person, number: newNumber }\n          const {id} = person\n\n          personService\n          .update(id, updatedPerson)\n          .then((returnedPerson) => {\n            setPersons(\n              persons.map((person) =>\n                person.id !== id ? person : returnedPerson)\n            )\n            setNewName('')\n            setNewNumber('')\n            setFilter('')\n          })\n          .catch(error => {\n            setColor(false)\n            setErrorMessage(`Person ${newName} was already deleted`)\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 5000)})\n          setColor(true)\n          setErrorMessage(\n            `Updated ${newName}`\n          )\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n\n            setNewName('')\n            setNewNumber('')\n            setFilter('')\n\n      \n        } \n  }\n}\n\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  \n  const handleFilter = (event) => {\n    setFilter(event.target.value)\n    setFilteredPersons(persons.filter((person) =>\n    (person.name.toLowerCase().indexOf(event.target.value.toLowerCase()) !==-1)))\n  }\n\n  const handleDelete = (id) => {\n    const person = persons.find((p) => p.id === id)\n    const confirmDelete = window.confirm(`Are you sure you want to delete ${person.name}?`)\n    if (confirmDelete) {\n      personService.deletePerson(id).then(() => {\n        const delPersons = persons.filter((person) => person.id !== id)\n        setPersons(delPersons)\n\n        setFilter(\"\")\n      })\n      .catch(error => {\n        setColor(false)\n        setErrorMessage(`Person ${newName} was already deleted`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)})\n    }\n    setColor(true)\n    setErrorMessage(\n      `Deleted ${person.name}`\n    )\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 5000)\n\n  }\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage} color ={color} />\n      <Filter filter = {filter} handleFilter = {handleFilter} />\n      <h3>Add a new</h3>\n      <PersonForm personform addHlo = {addHlo} newName = {newName} handleNameChange = {handleNameChange} newNumber = {newNumber} handleNumberChange = {handleNumberChange}/>\n      <h3>Numbers</h3>\n      <Persons filteredPersons = {filteredPersons} persons ={persons} filter={filter} handleDelete={ handleDelete} />\n    </div>\n  )\n\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)\n"],"sourceRoot":""}